package components

import (
	"kellnhofer.com/work-log/web/model"
)

templ EntryList(days []*model.ListEntriesDay) {
	for _, day := range days {
		@entryDayHeader(day)
		@entryDayTable(day)
	}
}

templ entryDayHeader(day *model.ListEntriesDay) {
	<h3 class="mb-3 fw-bold">
		<span>{ day.Date }</span>
		<span>-</span>
		<span>{ day.Weekday }</span>
		<span>-</span>
		<span
			if day.WasTargetWorkDurationReached {
				class="wl-list-day-target-achieved"
			} else {
				class="wl-list-day-target-not-achieved"
			}
		>
			{ day.WorkDuration }
		</span>
		<span>({ day.BreakDuration } { getText("logLabelBreak") })</span>
	</h3>
}

templ entryDayTable(day *model.ListEntriesDay) {
	<div class="table-responsive table-responsive-xl mb-4">
		<table class="table table-sm align-middle">
			<thead>
				@entryDayTableHeaderRow()
			</thead>
			<tbody>
				for _, entry := range day.Entries {
					@entryDayTableRow(entry)
				}
			</tbody>
		</table>
	</div>
}

templ entryDayTableHeaderRow() {
	<tr class="wl-list-table-head">
		<th class="wl-list-table-column-buttons"></th>
		<th class="wl-list-table-column-type">{ getText("tableColType") }</th>
		<th class="wl-list-table-column-time">{ getText("tableColStart") }</th>
		<th class="wl-list-table-column-time">{ getText("tableColEnd") }</th>
		<th class="wl-list-table-column-time">{ getText("tableColNet") }</th>
		<th class="wl-list-table-column-activity">{ getText("tableColActivity") }</th>
		<th class="wl-list-table-column-description">{ getText("tableColDescription") }</th>
	</tr>
}

templ entryDayTableRow(entry *model.ListEntry) {
	if entry.IsMissing {
		<tr class="wl-list-table-row-missing">
			@entryDayTableRowBlank()
		</tr>
	} else if entry.IsOverlapping {
		<tr class="wl-list-table-row-overlapping">
			@entryDayTableRowBlank()
		</tr>
	} else {
		<tr>
			@entryDayTableRowButtonsField(entry.Id)
			@entryDayTableRowTextField(entry.EntryType)
			@entryDayTableRowTextField(entry.StartTime)
			@entryDayTableRowTextField(entry.EndTime)
			@entryDayTableRowTextField(entry.Duration)
			@entryDayTableRowTextField(entry.EntryActivity)
			@entryDayTableRowTextField(entry.Description)
		</tr>
	}
}

templ entryDayTableRowBlank() {
	<td colspan="7"></td>
}

templ entryDayTableRowButtonsField(id int) {
	<td>
		@entryDayTableRowButton(buildActionURL("edit", id), "icon-edit", getText("actionEdit"))
		@entryDayTableRowButton(buildActionURL("copy", id), "icon-copy", getText("actionCopy"))
		@entryDayTableRowButton(buildActionURL("delete", id), "icon-delete", getText("actionDelete"))
	</td>
}

templ entryDayTableRowButton(url templ.SafeURL, icon string, text string) {
	<a class="btn btn-link px-2 py-0 fs-6" href={ url }>
		<i class={ "icon " + icon } aria-label={ text }></i>
	</a>
}

func buildActionURL(action string, id int) templ.SafeURL {
	return toURL("../" + action + "/" + toString(id))
}

templ entryDayTableRowTextField(content string) {
	<td>{ content }</td>
}
