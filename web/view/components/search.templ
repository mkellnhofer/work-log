package components

import (
	"kellnhofer.com/work-log/web/model"
)

// This template is used to render the action buttons on the search page.
templ SearchActions() {
}

// This template is used to render the content of the search page.
templ SearchContent(searchEntries *model.SearchEntries) {
	<div id="wl-search-content">
		@SearchResult(searchEntries)
	</div>
}

// This template is used to render the search result.
templ SearchResult(entries *model.SearchEntries) {
	<div id="wl-search-result">
		@searchEntryList(entries)
		@searchPagingControl(entries.Query, entries.HasPrevPage, entries.PrevPageNum,
			entries.HasNextPage, entries.NextPageNum)
	</div>
}

templ searchEntryList(entries *model.SearchEntries) {
	if len(entries.Days) > 0 {
		@EntryList(entries.Days)
	} else {
		<div class="container m-5 text-center">
			<p class="p-5">
				{ getText("searchListLabelNoEntries") }
			</p>
		</div>
	}
}

templ searchPagingControl(query string, hasPrevPage bool, prevPageNum int, hasNextPage bool,
	nextPageNum int) {
	@PagingControl("#wl-search-result", hasPrevPage, buildSearchPageHxGetUrl(query, prevPageNum),
		hasNextPage, buildSearchPageHxGetUrl(query, nextPageNum))
}

func buildSearchPageHxGetUrl(query string, pageNum int) string {
	return "search?query=" + query + "&page=" + toString(pageNum)
}

templ searchEntryForm(previousUrl templ.SafeURL, actionUrl templ.SafeURL,
	entryTypes []*model.EntryType, entryActivities []*model.EntryActivity, search *model.SearchInput) {
	<form action={ actionUrl } method="POST">
		@searchEntryFormFields(entryTypes, entryActivities, search)
		<div>
			<a class="btn btn-light" href={ previousUrl }>
				{ getText("actionCancel") }
			</a>
			<button class="btn btn-primary" type="submit">
				{ getText("searchActionSearch") }
			</button>
		</div>
	</form>
}

templ searchEntryFormFields(entryTypes []*model.EntryType, entryActivities []*model.EntryActivity,
	search *model.SearchInput) {
	<div class="form-row">
		<div class="col-2 col-sm-1 col-md-1 col-xl-1">
			<input
				class="checkbox"
				name="by-type"
				type="checkbox"
				if search.ByType {
					checked
				}
			/>
		</div>
		<div class="form-group col-10 col-sm-4 col-md-3 col-xl-3">
			<label for="type">{ getText("formLabelType") }</label>
			<select class="form-control" name="type">
				for _, entryType := range entryTypes {
					<option
						value={ toString(entryType.Id) }
						if entryType.Id == search.TypeId {
							selected
						}
					>
						{ entryType.Description }
					</option>
				}
			</select>
		</div>
	</div>
	<div class="form-row">
		<div class="col-2 col-sm-1 col-md-1 col-xl-1">
			<input
				class="checkbox"
				name="by-date"
				type="checkbox"
				if search.ByDate {
					checked
				}
			/>
		</div>
		<div class="form-group col-5 col-sm-4 col-md-3 col-xl-3">
			<label for="start-date">{ getText("formLabelFrom") }</label>
			<input class="form-control" name="start-date" type="date" value={ search.StartDate }/>
		</div>
		<div class="form-group col-5 col-sm-4 col-md-3 col-xl-3">
			<label for="end-date">{ getText("formLabelTo") }</label>
			<input class="form-control" name="end-date" type="date" value={ search.EndDate }/>
		</div>
	</div>
	<div class="form-row">
		<div class="col-2 col-sm-1 col-md-1 col-xl-1">
			<input
				class="checkbox"
				name="by-activity"
				type="checkbox"
				if search.ByActivity {
					checked
				}
			/>
		</div>
		<div class="form-group col-10 col-sm-4 col-md-3 col-xl-3">
			<label for="activity">{ getText("formLabelActivity") }</label>
			<select class="form-control" name="activity">
				for _, entryActivity := range entryActivities {
					<option
						value={ toString(entryActivity.Id) }
						if entryActivity.Id == search.ActivityId {
							selected
						}
					>
						{ entryActivity.Description }
					</option>
				}
			</select>
		</div>
	</div>
	<div class="form-row">
		<div class="col-2 col-sm-1 col-md-1 col-xl-1">
			<input
				class="checkbox"
				name="by-description"
				type="checkbox"
				if search.ByDescription {
					checked
				}
			/>
		</div>
		<div class="form-group col-10 col-sm-87 col-md-9 col-xl-9">
			<label for="description">{ getText("formLabelDescription") }</label>
			<input class="form-control" name="description" type="text" value={ search.Description }/>
		</div>
	</div>
}
